import com.ds.ciceksepeti.buildsrc.Configs

android {
    compileSdkVersion Configs.compileSdkVersion
    buildToolsVersion Configs.buildToolsVersion

    defaultConfig {
        minSdkVersion Configs.minSdkVersion
        targetSdkVersion Configs.targetSdkVersion
        multiDexEnabled = true
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner Configs.testInstrumentationRunner
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField('String', 'BASE_URL', '"https://api.ciceksepeti.com/v2/"')
            buildConfigField("boolean", "IsProd", "true")
        }

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField('String', 'BASE_URL', '"https://api.ciceksepeti.com/v2/"')
            buildConfigField("boolean", "IsProd", "false")
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
        freeCompilerArgs += ["-Xopt-in=kotlin.RequiresOptIn"]
    }

    buildFeatures.viewBinding = true

    packagingOptions {
        exclude("META-INF/DEPENDENCIES")
        exclude("META-INF/LICENSE")
        exclude("META-INF/LICENSE.txt")
        exclude("META-INF/license.txt")
        exclude("META-INF/NOTICE")
        exclude("META-INF/NOTICE.txt")
        exclude("META-INF/notice.txt")
        exclude("META-INF/ASL2.0")
        exclude("META-INF/*.kotlin_module")
    }
}
