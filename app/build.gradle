import com.ds.ciceksepeti.buildsrc.Configs
import com.ds.ciceksepeti.buildsrc.Deps
import com.ds.ciceksepeti.buildsrc.Modules

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id "androidx.navigation.safeargs.kotlin"
    id "org.jetbrains.kotlin.kapt"
}

android {
    compileSdkVersion Configs.compileSdkVersion
    buildToolsVersion Configs.buildToolsVersion

    defaultConfig {
        applicationId Configs.applicationId
        minSdkVersion Configs.minSdkVersion
        targetSdkVersion Configs.targetSdkVersion
        versionCode Configs.versionCode
        versionName Configs.versionName
        multiDexEnabled = true
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner Configs.testInstrumentationRunner
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField('String', 'BASE_URL', '"https://api.ciceksepeti.com/v2/"')
            buildConfigField("boolean", "IsProd", "true")
        }

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField('String', 'BASE_URL', '"https://api.ciceksepeti.com/v2/"')
            buildConfigField("boolean", "IsProd", "false")
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
        freeCompilerArgs += ["-Xopt-in=kotlin.RequiresOptIn"]
    }

    buildFeatures.viewBinding = true

    packagingOptions {
        exclude("META-INF/DEPENDENCIES")
        exclude("META-INF/LICENSE")
        exclude("META-INF/LICENSE.txt")
        exclude("META-INF/license.txt")
        exclude("META-INF/NOTICE")
        exclude("META-INF/NOTICE.txt")
        exclude("META-INF/notice.txt")
        exclude("META-INF/ASL2.0")
        exclude("META-INF/*.kotlin_module")
    }
}

dependencies {
    implementation project(Modules.model)
    implementation project(Modules.local)
    implementation project(Modules.remote)
    implementation project(Modules.repository)
    implementation project(Modules.domain)
    implementation project(Modules.common)

    implementation(Deps.stdlib)
    implementation(Deps.coreKtx)
    implementation(Deps.appcompat)
    implementation(Deps.material)
    implementation(Deps.constraintLayout)

    implementation(Deps.koinAndroid)

    implementation(Deps.fragmentKtx)
    implementation(Deps.activityKtx)

    // network
    implementation(Deps.retrofit)
    implementation(Deps.retrofitMoshi)
    implementation(Deps.okhttp)
    implementation(Deps.loggingInterceptor)
    implementation(Deps.conscrypt)
    implementation(Deps.retrofitUrl)
    // moshi
    implementation(Deps.moshi)
    implementation(Deps.moshiCodegen)
    // room
    implementation(Deps.roomKtx)
    kapt(Deps.roomCompiler)
    // coroutines
    implementation(Deps.coroutinesAndroid)
    implementation(Deps.coroutinesCore)
    // lifecycle
    implementation(Deps.viewModelKtx)
    implementation(Deps.liveDataKtx)
    implementation(Deps.runtimeKtx)
    implementation(Deps.java8)
    // glide
    implementation(Deps.glide)
    kapt(Deps.glideCompiler)

    implementation(Deps.process)
    implementation(Deps.timber)

    // navigation component
    implementation(Deps.navFragmentKtx)
    implementation(Deps.navUiKtx)

    testImplementation(Deps.junit)
    testImplementation(Deps.koinTest)
    testImplementation(Deps.coroutineTest)
    testImplementation(Deps.roboelectric)
    androidTestImplementation(Deps.junitExt)
    androidTestImplementation(Deps.espressoCore)
}